name: Deploy Nest.js to AWS

on:
  push:
    branches:
      - main
    paths:
      - 'server-nestjs/**'
      - '.github/workflows/deploy-nestjs.yml'
  workflow_dispatch: # 수동 실행 허용

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: field-nestjs
  ECS_SERVICE: field-nestjs-service # ECS 사용 시
  ASG_NAME: asg-nestjs # Auto Scaling Group 이름

jobs:
  build-and-deploy:
    name: Build and Deploy to AWS
    runs-on: ubuntu-latest
    
    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. AWS 자격 증명 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 3. ECR 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 4. Docker 이미지 빌드, 태그, 푸시
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd server-nestjs
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      # 5. Auto Scaling Group 인스턴스 새로 고침 (롤링 업데이트)
      - name: Trigger Auto Scaling Group instance refresh
        run: |
          aws autoscaling start-instance-refresh \
            --auto-scaling-group-name ${{ env.ASG_NAME }} \
            --preferences '{
              "MinHealthyPercentage": 50,
              "InstanceWarmup": 300
            }' \
            --region ${{ env.AWS_REGION }}

      # 6. 배포 완료 알림 (선택 사항)
      - name: Deployment notification
        if: success()
        run: |
          echo "✅ Nest.js 배포 성공!"
          echo "이미지: ${{ steps.build-image.outputs.image }}"
          echo "커밋: ${{ github.sha }}"
          echo "브랜치: ${{ github.ref_name }}"
          echo "시간: $(date)"

      # 7. 배포 실패 알림 (선택 사항)
      - name: Deployment failure notification
        if: failure()
        run: |
          echo "❌ Nest.js 배포 실패!"
          echo "브랜치: ${{ github.ref_name }}"
          echo "커밋: ${{ github.sha }}"
          
      # 8. Slack 알림 (선택 사항)
      # - name: Slack Notification
      #   if: always()
      #   uses: 8398a7/action-slack@v3
      #   with:
      #     status: ${{ job.status }}
      #     text: 'Nest.js 배포 ${{ job.status }}'
      #     webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}

