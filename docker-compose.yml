version: '3.8'

services:
  # ========================================
  # MongoDB Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§
  # ========================================
  mongodb:
    image: mongo:7
    container_name: field-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: field_db
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - field-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ========================================
  # Mongo Express (DB Í¥ÄÎ¶¨ GUI)
  # ========================================
  mongo-express:
    image: mongo-express:latest
    container_name: field-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin123
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - field-network

    # ========================================
  # Backend - Nest.js (Ïã†Í∑ú)
  # ========================================
  backend:
    build:
      context: ./server-nestjs
      dockerfile: Dockerfile.dev
    container_name: field-backend-nestjs
    restart: unless-stopped
    ports:
      - "4002:4002"
    
    # üëá Ïù¥ Î∂ÄÎ∂ÑÏùÑ Ï∂îÍ∞Ä
    env_file:
      - ./server-nestjs/.env
    
    environment:
      NODE_ENV: development
      PORT: 4002
      MONGO_URI: mongodb://admin:admin123@mongodb:27017/field_db?authSource=admin
      JWT_SECRET: field-dev-secret-key-2025
      JWT_EXPIRES_IN: 7d
    
    volumes:
      - ./server-nestjs:/app
      - /app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - field-network
    command: npm run start:dev

  # ========================================
  # Backend Legacy - Express (Í∏∞Ï°¥)
  # ========================================
  backend-legacy:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: field-backend-express
    restart: unless-stopped
    ports:
      - "4001:4001"
    environment:
      NODE_ENV: development
      PORT: 4001
      MONGO_URI: mongodb://admin:admin123@mongodb:27017/field_db?authSource=admin
    volumes:
      - ./server:/app
      - ./server/uploads:/app/uploads
      - /app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - field-network

  # ========================================
  # Frontend - React (Vite)
  # ========================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: builder
    container_name: field-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      NODE_ENV: development
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - /app/node_modules
    depends_on:
      - backend
      - backend-legacy
    networks:
      - field-network
    command: npm run dev -- --host 0.0.0.0

# ========================================
# Î≥ºÎ•® Ï†ïÏùò
# ========================================
volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

# ========================================
# ÎÑ§Ìä∏ÏõåÌÅ¨ Ï†ïÏùò
# ========================================
networks:
  field-network:
    driver: bridge

